{
  "openapi": "3.0.0",
  "info": {
    "title": "Ignite Template Introducao ao Solid Documentation",
    "description": "this documentation is for API Getting Started with SOLID.",
    "version": "1.0.0",
    "contact": {
      "email": "alexandre_ferreira_gyn@hotmal.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a user",
        "description": "Create a new user",
        "requestBody": {
          "required": true,
          "description": "Mandatory fields for user creation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Alexandre Ferreira Morais",
                    "email": "alexandre_ferreira_gyn@hotmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creatad",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "User Already exists!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "User Already exists!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Only `admin` users can access",
        "parameters": [
          {
            "in": "header",
            "name": "user_id",
            "description": "The user ID",
            "required": true,
            "schema":{
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not existis! or User not admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "User not existis! or User not admin"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": ["Users"],
        "summary": "Turn user admin",
        "description": "Turn user admin",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "The user ID",
            "required": true,
            "schema":{
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "operation performed successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "User Already exists!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "User Already exists!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by id",
        "description": "Get user by id",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "description": "The user ID",
            "required": true,
            "schema":{
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "User not existis!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                },
                "examples": {
                  "error": {
                    "value": {
                      "error": "User not existis!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Nome Completo"
          },
          "admin": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "example": "email@email.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Mensagem erro!"
          }
        }
      }
    }
  }
}